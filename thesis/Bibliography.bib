@INPROCEEDINGS{RossiniPaper1,
  author={Rossini, Martina and Zichichi, Mirco and Ferretti, Stefano},
  booktitle={2023 IEEE International Conference on Pervasive Computing and Communications Workshops and other Affiliated Events (PerCom Workshops)}, 
  title={On the Use of Deep Neural Networks for Security Vulnerabilities Detection in Smart Contracts}, 
  year={2023},
  volume={},
  number={},
  pages={74-79},
  keywords={Deep learning;Codes;Conferences;Source coding;Smart contracts;Neural networks;Computer architecture;smart contract;code vulnerability;blockchain;deep learning;convolutional neural networks},
  doi={10.1109/PerComWorkshops56833.2023.10150302}
  }

@misc{rossini2022slitherauditedcontracts,
title = {Slither Audited Smart Contracts Dataset},
author={Martina Rossini},
year={2022}
}

@misc{reentrancy-historical,
  author       = {pcaversaccio},
  howpublished = {https://github.com/pcaversaccio/reentrancy-attacks},
  title        = { A Historical Collection of Reentrancy Attacks
  },
  year         = {2023}
}

@INPROCEEDINGS{sc-vulnerabilities,
  author={Khan, Zulfiqar Ali and Siami Namin, Akbar},
  booktitle={2020 IEEE International Conference on Big Data (Big Data)}, 
  title={Ethereum Smart Contracts: Vulnerabilities and their Classifications}, 
  year={2020},
  volume={},
  number={},
  pages={1-10},
  keywords={Conferences;Smart contracts;Blockchain;Big Data;Tools;Software;Safety;Smart Contract;Ethereum;EVM;vulnerabilities;Solidity;tools},
  doi={10.1109/BigData50022.2020.9439088}}

  @article{Maian,
  author       = {Ivica Nikolic and
                  Aashish Kolluri and
                  Ilya Sergey and
                  Prateek Saxena and
                  Aquinas Hobor},
  title        = {Finding The Greedy, Prodigal, and Suicidal Contracts at Scale},
  journal      = {CoRR},
  volume       = {abs/1802.06038},
  year         = {2018},
  url          = {http://arxiv.org/abs/1802.06038},
  eprinttype    = {arXiv},
  eprint       = {1802.06038},
  timestamp    = {Tue, 17 Sep 2019 14:15:19 +0200},
  biburl       = {https://dblp.org/rec/journals/corr/abs-1802-06038.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@misc{Mythril,
  howpublished = {https://github.com/ConsenSys/mythril},
  title        = { Mythril Github repository},
}


@misc{Oyente,
  howpublished = {https://pypi.org/project/oyente/},
  title        = { OPyente },
}

@misc{SiteAnnotationTransformer,
  howpublished = {https://nlp.seas.harvard.edu/annotated-transformer/},
  title        = { The Annotated Transformer },
  Author = {Austin Huang and Suraj Subramanian and  Jonathan Sum and Khalid Almubarak and Stella Biderman},

}

@article{Maian2,
author       = {Bernhard Mueller},
title        = {Smashing Ethereum Smart Contracts for Fun and Real Profit},
journal      = { 9th HITB Security Conference},
year         = {2018},
}

@inproceedings{ Oyente2,
author = {Luu, Loi and Chu, Duc-Hiep and Olickel, Hrishi and Saxena, Prateek and Hobor, Aquinas},
title = {Making Smart Contracts Smarter},
year = {2016},
isbn = {9781450341394},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2976749.2978309},
doi = {10.1145/2976749.2978309},
abstract = {Cryptocurrencies record transactions in a decentralized data structure called a blockchain. Two of the most popular cryptocurrencies, Bitcoin and Ethereum, support the feature to encode rules or scripts for processing transactions. This feature has evolved to give practical shape to the ideas of smart contracts, or full-fledged programs that are run on blockchains. Recently, Ethereum's smart contract system has seen steady adoption, supporting tens of thousands of contracts, holding millions dollars worth of virtual coins.In this paper, we investigate the security of running smart contracts based on Ethereum in an open distributed network like those of cryptocurrencies. We introduce several new security problems in which an adversary can manipulate smart contract execution to gain profit. These bugs suggest subtle gaps in the understanding of the distributed semantics of the underlying platform. As a refinement, we propose ways to enhance the operational semantics of Ethereum to make contracts less vulnerable. For developers writing contracts for the existing Ethereum system, we build a symbolic execution tool called Oyente to find potential security bugs. Among 19, 336 existing Ethereum contracts, Oyente flags 8, 833 of them as vulnerable, including the TheDAO bug which led to a 60 million US dollar loss in June 2016. We also discuss the severity of other attacks for several case studies which have source code available and confirm the attacks (which target only our accounts) in the main Ethereum network.},
booktitle = {Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security},
pages = {254–269},
numpages = {16},
keywords = {blockchain, cryptocurrencies, ethereum, smart contract, symbolic execution},
location = {Vienna, Austria},
series = {CCS '16}
}

@article{Manticore,
  author       = {Mark Mossberg and
                  Felipe Manzano and
                  Eric Hennenfent and
                  Alex Groce and
                  Gustavo Grieco and
                  Josselin Feist and
                  Trent Brunson and
                  Artem Dinaburg},
  title        = {Manticore: {A} User-Friendly Symbolic Execution Framework for Binaries
                  and Smart Contracts},
  journal      = {CoRR},
  volume       = {abs/1907.03890},
  year         = {2019},
  url          = {http://arxiv.org/abs/1907.03890},
  eprinttype    = {arXiv},
  eprint       = {1907.03890},
  timestamp    = {Wed, 17 Jul 2019 10:27:36 +0200},
  biburl       = {https://dblp.org/rec/journals/corr/abs-1907-03890.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{Securify,
author = {Tsankov, Petar and Dan, Andrei and Drachsler-Cohen, Dana and Gervais, Arthur and Bünzli, Florian and Vechev, Martin},
year = {2018},
month = {10},
pages = {67-82},
title = {Securify: Practical Security Analysis of Smart Contracts},
doi = {10.1145/3243734.3243780}
}

@inproceedings{SmartCheck,
author = {Tikhomirov, Sergei and Voskresenskaya, Ekaterina and Ivanitskiy, Ivan and Takhaviev, Ramil and Marchenko, Evgeny and Alexandrov, Yaroslav},
title = {SmartCheck: static analysis of ethereum smart contracts},
year = {2018},
isbn = {9781450357265},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3194113.3194115},
doi = {10.1145/3194113.3194115},
abstract = {Ethereum is a major blockchain-based platform for smart contracts - Turing complete programs that are executed in a decentralized network and usually manipulate digital units of value. Solidity is the most mature high-level smart contract language. Ethereum is a hostile execution environment, where anonymous attackers exploit bugs for immediate financial gain. Developers have a very limited ability to patch deployed contracts. Hackers steal up to tens of millions of dollars from flawed contracts, a well-known example being "The DAO", broken in June 2016. Advice on secure Ethereum programming practices is spread out across blogs, papers, and tutorials. Many sources are outdated due to a rapid pace of development in this field. Automated vulnerability detection tools, which help detect potentially problematic language constructs, are still underdeveloped in this area.We provide a comprehensive classification of code issues in Solidity and implement SmartCheck - an extensible static analysis tool that detects them1. SmartCheck translates Solidity source code into an XML-based intermediate representation and checks it against XPath patterns. We evaluated our tool on a big dataset of real-world contracts and compared the results with manual audit on three contracts. Our tool reflects the current state of knowledge on Solidity vulnerabilities and shows significant improvements over alternatives. SmartCheck has its limitations, as detection of some bugs requires more sophisticated techniques such as taint analysis or even manual audit. We believe though that a static analyzer should be an essential part of contract developers' toolbox, letting them fix simple bugs fast and allocate more effort to complex issues.},
booktitle = {Proceedings of the 1st International Workshop on Emerging Trends in Software Engineering for Blockchain},
pages = {9–16},
numpages = {8},
keywords = {static analysis, solidity, smart contracts, ethereum, bug detection},
location = {Gothenburg, Sweden},
series = {WETSEB '18}
}

@INPROCEEDINGS{Slither,
  author={Feist, Josselin and Grieco, Gustavo and Groce, Alex},
  booktitle={2019 IEEE/ACM 2nd International Workshop on Emerging Trends in Software Engineering for Blockchain (WETSEB)}, 
  title={Slither: A Static Analysis Framework for Smart Contracts}, 
  year={2019},
  volume={},
  number={},
  pages={8-15},
  keywords={Tools;Smart contracts;Static analysis;Optimization;Security;Detectors;Blockchain;Smart Contract;Solidity;Static Analysis;Vulnerability Detection},
  doi={10.1109/WETSEB.2019.00008}}

  @article{ESCORT,
  author       = {Oliver Lutz and
                  Huili Chen and
                  Hossein Fereidooni and
                  Christoph Sendner and
                  Alexandra Dmitrienko and
                  Ahmad{-}Reza Sadeghi and
                  Farinaz Koushanfar},
  title        = {{ESCORT:} Ethereum Smart COntRacTs Vulnerability Detection using Deep
                  Neural Network and Transfer Learning},
  journal      = {CoRR},
  volume       = {abs/2103.12607},
  year         = {2021},
  url          = {https://arxiv.org/abs/2103.12607},
  eprinttype    = {arXiv},
  eprint       = {2103.12607},
  timestamp    = {Tue, 06 Apr 2021 19:06:07 +0200},
  biburl       = {https://dblp.org/rec/journals/corr/abs-2103-12607.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@ARTICLE{ContractWard,
  author={Wang, Wei and Song, Jingjing and Xu, Guangquan and Li, Yidong and Wang, Hao and Su, Chunhua},
  journal={IEEE Transactions on Network Science and Engineering}, 
  title={ContractWard: Automated Vulnerability Detection Models for Ethereum Smart Contracts}, 
  year={2021},
  volume={8},
  number={2},
  pages={1133-1144},
  keywords={Smart contracts;Blockchain;Tools;Feature extraction;Security;Machine learning algorithms;Blockchain;machine learning;smart contracts;vulnerability detection.},
  doi={10.1109/TNSE.2020.2968505}}

  
@Article{Mezina,
AUTHOR = {Mezina, Anzhelika and Ometov, Aleksandr},
TITLE = {Detecting Smart Contract Vulnerabilities with Combined Binary and Multiclass Classification},
JOURNAL = {Cryptography},
VOLUME = {7},
YEAR = {2023},
NUMBER = {3},
ARTICLE-NUMBER = {34},
URL = {https://www.mdpi.com/2410-387X/7/3/34},
ISSN = {2410-387X},
DOI = {10.3390/cryptography7030034}
}

@article{Huang,
  author       = {TonTon Hsien{-}De Huang},
  title        = {Hunting the Ethereum Smart Contract: Color-inspired Inspection of
                  Potential Attacks},
  journal      = {CoRR},
  volume       = {abs/1807.01868},
  year         = {2018},
  url          = {http://arxiv.org/abs/1807.01868},
  eprinttype    = {arXiv},
  eprint       = {1807.01868},
  timestamp    = {Mon, 13 Aug 2018 16:47:25 +0200},
  biburl       = {https://dblp.org/rec/journals/corr/abs-1807-01868.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}


@Article{Deng,
AUTHOR = {Deng, Weichu and Wei, Huanchun and Huang, Teng and Cao, Cong and Peng, Yun and Hu, Xuan},
TITLE = {Smart Contract Vulnerability Detection Based on Deep Learning and Multimodal Decision Fusion},
JOURNAL = {Sensors},
VOLUME = {23},
YEAR = {2023},
NUMBER = {16},
ARTICLE-NUMBER = {7246},
URL = {https://www.mdpi.com/1424-8220/23/16/7246},
PubMedID = {37631785},
ISSN = {1424-8220},
DOI = {10.3390/s23167246}
}

@article{BERT,
  author       = {Jacob Devlin and
                  Ming{-}Wei Chang and
                  Kenton Lee and
                  Kristina Toutanova},
  title        = {{BERT:} Pre-training of Deep Bidirectional Transformers for Language
                  Understanding},
  journal      = {CoRR},
  volume       = {abs/1810.04805},
  year         = {2018},
  url          = {http://arxiv.org/abs/1810.04805},
  eprinttype    = {arXiv},
  eprint       = {1810.04805},
  timestamp    = {Tue, 30 Oct 2018 20:39:56 +0100},
  biburl       = {https://dblp.org/rec/journals/corr/abs-1810-04805.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@article{AttentionIsAllYouNeed,
  author       = {Ashish Vaswani and
                  Noam Shazeer and
                  Niki Parmar and
                  Jakob Uszkoreit and
                  Llion Jones and
                  Aidan N. Gomez and
                  Lukasz Kaiser and
                  Illia Polosukhin},
  title        = {Attention Is All You Need},
  journal      = {CoRR},
  volume       = {abs/1706.03762},
  year         = {2017},
  url          = {http://arxiv.org/abs/1706.03762},
  eprinttype    = {arXiv},
  eprint       = {1706.03762},
  timestamp    = {Sat, 23 Jan 2021 01:20:40 +0100},
  biburl       = {https://dblp.org/rec/journals/corr/VaswaniSPUJGKP17.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@book{jurafsky2009speech,
  title={Speech and Language Processing},
  author={Jurafsky, Daniel and Martin, James H},
  year={2009},
  publisher={Pearson Prentice Hall},
  edition={2nd}
}

@article{TrendsInNLP,
  author       = {Tom Young and
                  Devamanyu Hazarika and
                  Soujanya Poria and
                  Erik Cambria},
  title        = {Recent Trends in Deep Learning Based Natural Language Processing},
  journal      = {CoRR},
  volume       = {abs/1708.02709},
  year         = {2017},
  url          = {http://arxiv.org/abs/1708.02709},
  eprinttype    = {arXiv},
  eprint       = {1708.02709},
  timestamp    = {Mon, 13 Aug 2018 16:46:22 +0200},
  biburl       = {https://dblp.org/rec/journals/corr/abs-1708-02709.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@ARTICLE{6786458,
  author={Cambria, Erik and White, Bebo},
  journal={IEEE Computational Intelligence Magazine}, 
  title={Jumping NLP Curves: A Review of Natural Language Processing Research [Review Article]}, 
  year={2014},
  volume={9},
  number={2},
  pages={48-57},
  keywords={Natural language processing;Semantics;Pragmatics;Syntactics;Knowledge based systems},
  doi={10.1109/MCI.2014.2307227}}


  @inproceedings{SVM,
  author = {Evgeniou, Theodoros and Pontil, Massimiliano},
  year = {2001},
  month = {09},
  pages = {249-257},
  title = {Support Vector Machines: Theory and Applications},
  volume = {2049},
  isbn = {978-3-540-42490-1},
  doi = {10.1007/3-540-44673-7_12}
  }

  @article{LSTM,
  author = {Hochreiter, Sepp and Schmidhuber, J\"{u}rgen},
  title = {Long Short-Term Memory},
  year = {1997},
  issue_date = {November 15, 1997},
  publisher = {MIT Press},
  address = {Cambridge, MA, USA},
  volume = {9},
  number = {8},
  issn = {0899-7667},
  url = {https://doi.org/10.1162/neco.1997.9.8.1735},
  doi = {10.1162/neco.1997.9.8.1735},
  journal = {Neural Comput.},
  month = {nov},
  pages = {1735–1780},
  numpages = {46}
  }

  @inproceedings{rush-2018-annotated,
    title = "The Annotated Transformer",
    author = "Rush, Alexander",
    editor = "Park, Eunjeong L.  and
      Hagiwara, Masato  and
      Milajevs, Dmitrijs  and
      Tan, Liling",
    booktitle = "Proceedings of Workshop for {NLP} Open Source Software ({NLP}-{OSS})",
    month = jul,
    year = "2018",
    address = "Melbourne, Australia",
    publisher = "Association for Computational Linguistics",
    url = "https://aclanthology.org/W18-2509",
    doi = "10.18653/v1/W18-2509",
    pages = "52--60",
    abstract = "A major goal of open-source NLP is to quickly and accurately reproduce the results of new work, in a manner that the community can easily use and modify. While most papers publish enough detail for replication, it still may be difficult to achieve good results in practice. This paper presents a worked exercise of paper reproduction with the goal of implementing the results of the recent Transformer model. The replication exercise aims at simple code structure that follows closely with the original work, while achieving an efficient usable system.",
}

@article{WordPiece,
  author       = {Yonghui Wu and
                  Mike Schuster and
                  Zhifeng Chen and
                  Quoc V. Le and
                  Mohammad Norouzi and
                  Wolfgang Macherey and
                  Maxim Krikun and
                  Yuan Cao and
                  Qin Gao and
                  Klaus Macherey and
                  Jeff Klingner and
                  Apurva Shah and
                  Melvin Johnson and
                  Xiaobing Liu and
                  Lukasz Kaiser and
                  Stephan Gouws and
                  Yoshikiyo Kato and
                  Taku Kudo and
                  Hideto Kazawa and
                  Keith Stevens and
                  George Kurian and
                  Nishant Patil and
                  Wei Wang and
                  Cliff Young and
                  Jason Smith and
                  Jason Riesa and
                  Alex Rudnick and
                  Oriol Vinyals and
                  Greg Corrado and
                  Macduff Hughes and
                  Jeffrey Dean},
  title        = {Google's Neural Machine Translation System: Bridging the Gap between
                  Human and Machine Translation},
  journal      = {CoRR},
  volume       = {abs/1609.08144},
  year         = {2016},
  url          = {http://arxiv.org/abs/1609.08144},
  eprinttype    = {arXiv},
  eprint       = {1609.08144},
  timestamp    = {Thu, 14 Jan 2021 12:12:19 +0100},
  biburl       = {https://dblp.org/rec/journals/corr/WuSCLNMKCGMKSJL16.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{DistillBERT,
  author       = {Victor Sanh and
                  Lysandre Debut and
                  Julien Chaumond and
                  Thomas Wolf},
  title        = {DistilBERT, a distilled version of {BERT:} smaller, faster, cheaper
                  and lighter},
  journal      = {CoRR},
  volume       = {abs/1910.01108},
  year         = {2019},
  url          = {http://arxiv.org/abs/1910.01108},
  eprinttype    = {arXiv},
  eprint       = {1910.01108},
  timestamp    = {Tue, 02 Jun 2020 12:48:59 +0200},
  biburl       = {https://dblp.org/rec/journals/corr/abs-1910-01108.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{RoBERTa,
  author       = {Yinhan Liu and
                  Myle Ott and
                  Naman Goyal and
                  Jingfei Du and
                  Mandar Joshi and
                  Danqi Chen and
                  Omer Levy and
                  Mike Lewis and
                  Luke Zettlemoyer and
                  Veselin Stoyanov},
  title        = {RoBERTa: {A} Robustly Optimized {BERT} Pretraining Approach},
  journal      = {CoRR},
  volume       = {abs/1907.11692},
  year         = {2019},
  url          = {http://arxiv.org/abs/1907.11692},
  eprinttype    = {arXiv},
  eprint       = {1907.11692},
  timestamp    = {Thu, 14 Dec 2023 18:03:41 +0100},
  biburl       = {https://dblp.org/rec/journals/corr/abs-1907-11692.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{CodeBERT,
  author       = {Zhangyin Feng and
                  Daya Guo and
                  Duyu Tang and
                  Nan Duan and
                  Xiaocheng Feng and
                  Ming Gong and
                  Linjun Shou and
                  Bing Qin and
                  Ting Liu and
                  Daxin Jiang and
                  Ming Zhou},
  title        = {CodeBERT: {A} Pre-Trained Model for Programming and Natural Languages},
  journal      = {CoRR},
  volume       = {abs/2002.08155},
  year         = {2020},
  url          = {https://arxiv.org/abs/2002.08155},
  eprinttype    = {arXiv},
  eprint       = {2002.08155},
  timestamp    = {Thu, 18 Jun 2020 10:52:55 +0200},
  biburl       = {https://dblp.org/rec/journals/corr/abs-2002-08155.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{CodeBERTDataset,
  author       = {Hamel Husain and
                  Ho{-}Hsiang Wu and
                  Tiferet Gazit and
                  Miltiadis Allamanis and
                  Marc Brockschmidt},
  title        = {CodeSearchNet Challenge: Evaluating the State of Semantic Code Search},
  journal      = {CoRR},
  volume       = {abs/1909.09436},
  year         = {2019},
  url          = {http://arxiv.org/abs/1909.09436},
  eprinttype    = {arXiv},
  eprint       = {1909.09436},
  timestamp    = {Tue, 24 Sep 2019 11:33:51 +0200},
  biburl       = {https://dblp.org/rec/journals/corr/abs-1909-09436.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{Pytorch,
  author       = {Adam Paszke and
                  Sam Gross and
                  Francisco Massa and
                  Adam Lerer and
                  James Bradbury and
                  Gregory Chanan and
                  Trevor Killeen and
                  Zeming Lin and
                  Natalia Gimelshein and
                  Luca Antiga and
                  Alban Desmaison and
                  Andreas K{\"{o}}pf and
                  Edward Z. Yang and
                  Zach DeVito and
                  Martin Raison and
                  Alykhan Tejani and
                  Sasank Chilamkurthy and
                  Benoit Steiner and
                  Lu Fang and
                  Junjie Bai and
                  Soumith Chintala},
  title        = {PyTorch: An Imperative Style, High-Performance Deep Learning Library},
  journal      = {CoRR},
  volume       = {abs/1912.01703},
  year         = {2019},
  url          = {http://arxiv.org/abs/1912.01703},
  eprinttype    = {arXiv},
  eprint       = {1912.01703},
  timestamp    = {Tue, 02 Nov 2021 15:18:32 +0100},
  biburl       = {https://dblp.org/rec/journals/corr/abs-1912-01703.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@misc{DeepMind,
   author = "Wikipedia",
   title = "{Google DeepMind} --- {W}ikipedia{,} The Free Encyclopedia",
   year = "2024",
   howpublished = {\url{http://en.wikipedia.org/w/index.php?title=Google\%20DeepMind&oldid=1228075682}},
 }

 @misc{Gemini,
   author = "Wikipedia",
   title = "{Gemini (language model)} --- {W}ikipedia{,} The Free Encyclopedia",
   year = "2024",
   howpublished = {\url{http://en.wikipedia.org/w/index.php?title=Gemini\%20(language\%20model)&oldid=1227938870}},
 }